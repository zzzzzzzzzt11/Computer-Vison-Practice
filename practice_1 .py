# -*- coding: utf-8 -*-
"""practice_1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bmBvU-hYrWzyykdhpkteK2Q82aBHFbuR

## ðŸ›  Exercises

1. Create a vector, scalar, matrix and tensor with values of your choosing using `tf.constant()`.
"""

import tensorflow as tf
print(tf.__version__)

import numpy as np
import tensorflow as tf

# Scalar
scalar = tf.constant(10)
scalar

# Vector
vector = tf.constant([11, 24, 36, 4])
vector

# Matrix
matrix = tf.constant([[22, 5, 3], [46, 52, 6]])
matrix

# Tensor (3D)
tensor = tf.constant([[[11, 2], [33, 4]], [[55, 6], [77, 8]]])
tensor

"""2. Find the shape, rank and size of the tensors you created in 1."""

scalar.shape
scalar.ndim
size_s = tf.size(matrix)
print(scalar.shape)
print(scalar.ndim)
print(tf.size(matrix))

vector.shape
vector.ndim
size_v = tf.size(matrix)
print(vector.shape)
print(vector.ndim)
print(tf.size(vector))

matrix.shape
matrix.ndim
size_m = tf.size(matrix)
print(matrix.shape)
print(matrix.ndim)
print(tf.size(matrix))

tensor.shape
tensor.ndim
size_t = tf.size(tensor)
print(tensor.shape)
print(tensor.ndim)
print(tf.size(tensor))

"""3. Create two tensors containing random values between 0 and 1 with shape `[5, 300]`."""

random_1 = tf.random.Generator.from_seed(0.5)
random_1 = random_1.normal(shape=(5, 300))
random_2 = tf.random.Generator.from_seed(0.7)
random_2 = random_2.normal(shape=(5, 300))
random_1, random_2

random_1 @ tf.reshape(random_2, shape=(300,5))

"""6. Create a tensor with random values between 0 and 1 with shape `[224, 224, 3]`."""

random_3 = tf.random.Generator.from_seed(0.8)
random_3 = random_3.normal(shape=(224, 224, 3))
random_3

"""7. Find the min and max values of the tensor you created in 6."""

min = tf.reduce_min(random_3)
max = tf.reduce_max(random_3)
print(min)
print(max)

"""8. Created a tensor with random values of shape `[1, 224, 224, 3]` then squeeze it to change the shape to `[224, 224, 3]`."""

random_4 = tf.random.Generator.from_seed(3)
random_4 = random_4.normal(shape=(1, 224, 224, 3))
random_4.shape, random_4.ndim

random_4_squeezed = tf.squeeze(random_4)
random_4_squeezed.shape, random_4_squeezed.ndim

"""9. Create a tensor with shape `[10]` using your own choice of values, then find the index which has the maximum value."""

random_5 = tf.constant([10, 0, 15, 11, 56, 23, 8, 90, 77, 100])
random_5.shape

max_5 = tf.reduce_max(random_5)
print(max_5)

"""10. One-hot encode the tensor you created in 9."""

tf.one_hot(random_5, depth=4)